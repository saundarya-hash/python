import pandas as pd
import zipfile
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.feature_selection import SelectKBest, mutual_info_classif
from sklearn.svm import SVC
from sklearn.tree import DecisionTreeClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report


zip_file = r'C:\Users\saund\Downloads\archive (2).zip'
with zipfile.ZipFile(zip_file, 'r') as archive:
    csv_file = archive.extract('ObesityDataSet_raw_and_data_sinthetic.csv')


df = pd.read_csv(csv_file)
print(df.head())  # Print first few rows of the dataset


X = df.drop('NObeyesdad', axis=1)
y = df['NObeyesdad']


X_encoded = pd.get_dummies(X)


scaler = StandardScaler()
X_scaled = scaler.fit_transform(X_encoded)


selector = SelectKBest(score_func=mutual_info_classif, k=4)
X_selected = selector.fit_transform(X_scaled, y)


X_train, X_test, y_train, y_test = train_test_split(X_selected, y, test_size=0.2, random_state=42)


models = [
    ('SVM', SVC()),
    ('Decision Tree', DecisionTreeClassifier()),
    ('K-Nearest Neighbors', KNeighborsClassifier()),
    ('Random Forest', RandomForestClassifier())
]

for model_name, model in models:
    print(f"Training {model_name}...")
    model.fit(X_train, y_train)

   
    y_pred = model.predict(X_test)

    accuracy = accuracy_score(y_test, y_pred)
    report = classification_report(y_test, y_pred)

    print(f"Accuracy ({model_name}): {accuracy}")
    print(f"Classification Report ({model_name}):\n{report}")
    print()
